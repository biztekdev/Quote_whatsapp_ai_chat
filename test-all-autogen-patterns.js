// Test all auto-generated message ID patterns
import dotenv from 'dotenv';
import mongoose from 'mongoose';
import MessageHandler from './handlers/messageHandler.js';

dotenv.config();

class MockWhatsAppService {
    async sendMessage(to, message, type = 'text') {
        console.log(`üì§ Mock WhatsApp message to ${to}:`);
        console.log(`   ${message.substring(0, 80)}...`);
        return { messages: [{ id: 'mock-response-' + Date.now() }] };
    }
}

async function testAllAutoGeneratedPatterns() {
    try {
        console.log('üß™ Testing all auto-generated message ID patterns...\n');

        // Connect to database
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ Connected to MongoDB\n');

        // Create mock services
        const mockWhatsApp = new MockWhatsAppService();
        const messageHandler = new MessageHandler(mockWhatsApp);

        const testPhone = '+1234567894';
        
        console.log('üîç Testing all auto-generated message ID patterns:');
        
        const patterns = [
            'auto-generated-',
            'error-response-',
            'error-flow-',
            'quote-response-',
            'material-selection-',
            'material-found-',
            'material-bypass-',
            'dimension-selection-',
            'finish-selection-'
        ];

        for (let i = 0; i < patterns.length; i++) {
            const pattern = patterns[i];
            const messageId = pattern + Date.now() + i; // Add index to make unique
            
            console.log(`\n${i + 1}. Testing ${pattern} pattern:`);
            
            await messageHandler.sendMessageOnce(
                messageId,
                testPhone,
                `Test message for ${pattern} pattern`
            );
        }
        
        console.log('\n‚úÖ All auto-generated message ID patterns tested successfully!');
        console.log('   - No "Message status not found" errors should appear above');
        console.log('   - All patterns should be marked as (auto-generated)');

    } catch (error) {
        console.error('‚ùå Test failed:', error.message);
        console.error(error.stack);
    } finally {
        await mongoose.disconnect();
        console.log('\nüì§ Disconnected from MongoDB');
    }
}

testAllAutoGeneratedPatterns();